#+TITLE: Test with no release
#+PROPERTY: header-args:sql-mode :product postgres :noweb yes :comments off
* Create focused table
  #+begin_src sql-mode
create table test2
  (
    testname text,
    codename text,
    release text,
    description text,
    file text
);
  #+end_src

  #+RESULTS:
  #+begin_SRC example
  CREATE TABLE
  #+end_SRC
* Loading Function
  #+begin_src sql-mode
    DROP FUNCTION IF EXISTS load_tests2;
    CREATE OR REPLACE FUNCTION load_tests2()
    RETURNS text AS $$
    from string import Template
    import json
    import yaml
    from urllib.request import urlopen, urlretrieve

    TESTS_URL = "https://raw.githubusercontent.com/kubernetes/kubernetes/master/test/conformance/testdata/conformance.yaml"
    tests = json.dumps(yaml.safe_load(urlopen(TESTS_URL)))
    sql = Template("""
                  WITH jsonb_array AS (
                  SELECT jsonb_array_elements('${tests}'::jsonb) as test_data)
                  INSERT INTO test2(testname, codename, release, description, file)
                     SELECT
                     (test_data->>'testname') as testname,
                     (test_data->>'codename') as codename,
                     (test_data->>'release')  as release,
                     (test_data->>'description') as description,
                     (test_data->>'file') as file
                     from jsonb_array;
                  """).substitute(tests = tests.replace("'","''"))
    try:
        plpy.execute(sql)
        return 'conformance.yaml loaded into test!'
    except Exception as e:
        return 'error occured: ', e
    $$ LANGUAGE plpython3u ;
    reset role;
  #+end_src

  #+RESULTS:
  #+begin_SRC example
  NOTICE:  function load_tests2() does not exist, skipping
  DROP FUNCTION
  postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# postgres$# CREATE FUNCTION
  RESET
  #+end_SRC


  #+begin_src sql-mode
  select * from load_tests2();
  #+end_src

  #+RESULTS:
  #+begin_SRC example
              load_tests2
  ------------------------------------
   conformance.yaml loaded into test!
  (1 row)

  #+end_SRC


  #+begin_src sql-mode
        select
          file
          from
              test2
         where release = ''
group by file;
  #+end_src

  #+RESULTS:
  #+begin_SRC example
                  file
  -------------------------------------
   test/e2e/apps/daemon_set.go
   test/e2e/apimachinery/watch.go
   test/e2e/apimachinery/aggregator.go
   test/e2e/apimachinery/namespace.go
   test/e2e/apps/deployment.go
  (5 rows)

  #+end_SRC
