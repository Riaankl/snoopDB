#+TITLE: 1:  Establish the necessary tables and views for meaningful exploration #1
#+AUTHOR: Zach Mandeville
#+DATE: 10 July 2020

* The Ticket
* What We need the DB to do
  - output JSON for coverage/1.19.json (or whatever is most recent release)
  - output JSON for conformance-progress.json
  - output JSON for coverage-by-release.json
  - List new endpoints and whether they are tested (for current release)
* Build out sql files
  I will set up the required tables/functions/views for each of these,
  and mark them off when a sql file is created for the environment and saved in postgres/db
  However, I realized that this will be much simpler ot test when we have a simplified docker file, and we can be adding each table as defined to the initalization of that file.

** [72%] Requirements for output for coverage/1.19.json
 - [X] plpython3u extension
 - [X] pg-semver extension
 - [X] open_api table
 - [X] audit_event table
 - [X] test table
 - [X] load_audit_event function
 - [X] load_open_api fn
 - [X] load_test fn
 - [ ] release-coverage view
 - [ ] scirpt to load all our data
 - [ ] script to output release_coverage to json
** Requirements for conformance-progress
   - all of above
   - stable_endpoint_first
   - stable_conformance_progress
   - script to output stable_conformance_progress to json
** Requirements for coverage-by-release
   - all of the above
   - stable_conformance_coverage_per_release
   - script to output stable_conformance_coverage_per_release as json
** List New endpoints
   - all of the above
   - new_stable_endpoints
I don't think this is needed as json yet, just something you run here.  We can see though.
* Conclusion
