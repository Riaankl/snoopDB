#+TITLE: Ticket 2: Build a Docker File
#+AUTHOR: Zach Mandeville
#+DATE: 10 July 2020
#+PROPERTY: header-args:shell :comments no

* The Ticket
  Create a simple DockerFile that has all necessary programs at startup to be able to initialize all our tables, functions, and views

We can start with the DockerFile from cncf/apisnoop, but remove any unnecessary dependencies or obfuscations.

We can say this ticket is done when one can start up postgres with

docker run -p 5432:5432 -e POSTGRES_USER="something" POSTGRES_PASSWORD="somethingelse" snoop

and the resulting db has plpython3u and pg-semver already added as extension and the snoopUtils programs available to the python functions.

the subsequent creation of all sql files will be handled in #1
* Build Simple DockerFile
  I want the minimum of fuss while making sure we can run all our python scripts.

** First Pass
   #+begin_src docker :tangle ../../postgres/Dockerfile :comments no
FROM postgres:12.0
 MAINTAINER Zach Mandeville <zz@ii.coop>
 RUN apt-get update \
   && apt-get install -y --no-install-recommends \
   postgresql-plpython3-12 \
   postgresql-12-plsh \
   postgresql-server-dev-12 \
   python3-bs4\
   python3-psycopg2\
   python3-ipdb\
   python3-requests \
   python3-yaml \
   libpq-dev \
   wget \
   make \
   gcc \
   libc6-dev \
   curl \
   jq \
   git \
   software-properties-common \
   apt-transport-https

 RUN env PG_CONFIG=$(which pg_config) \
     && git clone https://github.com/theory/pg-semver.git \
     && cd pg-semver \
     && make && make install

 COPY ./db ./db
 COPY initdb /docker-entrypoint-initdb.d
 COPY ./snoopUtils.py /usr/local/lib/python3.7/dist-packages/snoopUtils.py
 HEALTHCHECK --interval=10s --timeout=5s --start-period=5s --retries=5 \
   CMD ["echo 'ready'"] || exit 1
   #+end_src
   This will bring in all the necessary dependencies, then copy over our initdb files to the docker-entrypoint-initdb.d which postgres will use upon startup.
* Our initdb
  The postgres image knows to look for the docker-entrypoint-initdb.d folder upon startup and run any sql and sh scripts in there in order.   We could just keep all our sql files in there, I do believe, and not have to copy over the .db file
The below headings then will capture all that we want to do when postgres is intialized.
** Create Extensions for pg-semver and plpython3u
   #+begin_src sql-mode :tangle ../../postgres/initdb/01_create-extensions.sql
     create extension plpython3u;
     create extension semver;
   #+end_src

   if this works, then I should be able to connect and see these two extensions
   #+begin_src sql-mode
   \dx
   #+end_src

   #+RESULTS:
   #+begin_SRC example
                            List of installed extensions
       Name    | Version |   Schema   |                Description
   ------------+---------+------------+-------------------------------------------
    plpgsql    | 1.0     | pg_catalog | PL/pgSQL procedural language
    plpython3u | 1.0     | pg_catalog | PL/Python3U untrusted procedural language
    semver     | 0.30.0  | public     | Semantic version data type
   (3 rows)

   #+end_SRC

   there they are!  beauty.

** Create our Tables
   To make this easier to maintain in the future.  I am going to create a tables_functions_views.org file in our postgres dir and tangle all our needed files from there.

   When It works, I should be able to see the details for open_api, audit_event, and test
*** open_api
   #+begin_src sql-mode
  \dt+
   #+end_src

   #+RESULTS:
   #+begin_SRC example
                                                        List of relations
    Schema |   Name   | Type  |  Owner   |    Size    |                              Description
   --------+----------+-------+----------+------------+-----------------------------------------------------------------------
    public | open_api | table | postgres | 8192 bytes | Details on k8s endpoints taken from the openapi spec for that release
   (1 row)

   #+end_SRC

   #+begin_src sql-mode
\d+ open_api
   #+end_src

   #+RESULTS:
   #+begin_SRC example
                                                                                  Table "public.open_api"
       Column    |            Type             | Collation | Nullable | Default | Storage  | Stats target |                                 Description
   --------------+-----------------------------+-----------+----------+---------+----------+--------------+-----------------------------------------------------------------------------
    release      | text                        |           | not null |         | extended |              | kubernetes release this spec is taken from
    release_date | timestamp without time zone |           |          |         | plain    |              | canonical release dat for this k8s release
    endpoint     | text                        |           | not null |         | extended |              | a kubernetes endpoint, the operation_id in the spec
    level        | text                        |           |          |         | extended |              | level of endpoint: alpha, beta, or stable
    category     | text                        |           |          |         | extended |              | endpoint category, roughly its group, taken from the first tag in the spec.
    path         | text                        |           |          |         | extended |              | the http path of the endpoint
    k8s_group    | text                        |           |          |         | extended |              | k8s group for endpoint
    k8s_version  | text                        |           |          |         | extended |              | k8s version for endpoint
    k8s_kind     | text                        |           |          |         | extended |              | k8s kind  for endpoint
    k8s_action   | text                        |           |          |         | extended |              | endpoint action, roughly related to an http method
    deprecated   | boolean                     |           |          |         | plain    |              | is endpoint marked as deprecated?
    description  | text                        |           |          |         | extended |              | description of endpoint
    spec         | text                        |           |          |         | extended |              | the url location for this open api spec. will be from github.
   Indexes:
       "open_api_pkey" PRIMARY KEY, btree (release, endpoint)
   Access method: heap

   #+end_SRC

*** audit_event
    #+begin_src sql-mode
   \dt+
    #+end_src

    #+RESULTS:
    #+begin_SRC example
                                                          List of relations
     Schema |    Name     | Type  |  Owner   |    Size    |                              Description
    --------+-------------+-------+----------+------------+-----------------------------------------------------------------------
     public | audit_event | table | postgres | 16 kB      | each audit event taken from the logs of an e2e test suite run
     public | open_api    | table | postgres | 8192 bytes | Details on k8s endpoints taken from the openapi spec for that release
    (2 rows)

    #+end_SRC

    #+begin_src sql-mode
    \d+ audit_event
    #+end_src

    #+RESULTS:
    #+begin_SRC example
                                                                                            Unlogged table "public.audit_event"
        Column     |            Type             | Collation | Nullable |             Default              | Storage  | Stats target |                                   Description
    ---------------+-----------------------------+-----------+----------+----------------------------------+----------+--------------+----------------------------------------------------------------------------------
     release       | text                        |           |          |                                  | extended |              | release this test suite was run for
     release_date  | text                        |           |          |                                  | extended |              | canonical release, or date of run if version has not been released yet
     audit_id      | text                        |           | not null |                                  | extended |              | audit event id as given in log.  Note these are not necessarily unique.
     endpoint      | text                        |           |          |                                  | extended |              | the endpoint hit by this audit event
     useragent     | text                        |           |          |                                  | extended |              | the useragent of the event, stored in events request header
     test          | text                        |           |          |                                  | extended |              | the test codename if it can be extracted from useragent, else null
     test_hit      | boolean                     |           |          |                                  | plain    |              | is this event one where a test is hitting an endpoint, as seen in its useragent?
     conf_test_hit | boolean                     |           |          |                                  | plain    |              | is this event one where a conformance test is hitting an endpoint?
     data          | jsonb                       |           | not null |                                  | extended |              | the full json of the audit event
     source        | text                        |           |          |                                  | extended |              | the url location of the bucket where the test run logs are stored
     id            | integer                     |           | not null | generated by default as identity | plain    |              | generated id, this will be unique
     ingested_at   | timestamp without time zone |           |          | CURRENT_TIMESTAMP                | plain    |              | the time at which the audit_event was added to this table
    Indexes:
        "audit_event_pkey" PRIMARY KEY, btree (id)
    Access method: heap

    #+end_SRC

*** test
    #+begin_src sql-mode
    \dt+
    #+end_src

    #+RESULTS:
    #+begin_SRC example
                                                          List of relations
     Schema |    Name     | Type  |  Owner   |    Size    |                              Description
    --------+-------------+-------+----------+------------+-----------------------------------------------------------------------
     public | audit_event | table | postgres | 16 kB      | each audit event taken from the logs of an e2e test suite run
     public | open_api    | table | postgres | 8192 bytes | Details on k8s endpoints taken from the openapi spec for that release
     public | test        | table | postgres | 8192 bytes | info for each conformance test as taken from latest conformance.yaml
    (3 rows)

    #+end_SRC

    #+begin_src sql-mode
      \d+ test
    #+end_src

    #+RESULTS:
    #+begin_SRC example
                                                                        Table "public.test"
       Column    | Type | Collation | Nullable | Default | Storage  | Stats target |                                Description
    -------------+------+-----------+----------+---------+----------+--------------+---------------------------------------------------------------------------
     testname    | text |           |          |         | extended |              | The name of the test
     codename    | text |           |          |         | extended |              | How the test is displayed in code, i.e in the useragent of an audit event
     release     | text |           |          |         | extended |              | The release in which this test  was promoted to conformance
     description | text |           |          |         | extended |              | A description of this test
     file        | text |           |          |         | extended |              | The file in kubernetes/kubernetes where this test is defined
    Access method: heap

    #+end_SRC

** Create our Functions
   Same process as our tables
*** load_open_api
    #+begin_src sql-mode
      \df+ load_open_api
    #+end_src

    #+RESULTS:
    #+begin_SRC example
                                                                                                                                                                                               List of functions
     Schema |     Name      | Result data type |          Argument data types           | Type | Volatility | Parallel |  Owner   | Security | Access privileges |  Language  |                                           Source code                                            |                                                       Description
    --------+---------------+------------------+----------------------------------------+------+------------+----------+----------+----------+-------------------+------------+--------------------------------------------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------
     public | load_open_api | text             | custom_release text DEFAULT NULL::text | func | volatile   | unsafe   | postgres | invoker  |                   | plpython3u |                                                                                                 +| loads given release to open_api table.  Can pass release as "v.X.XX.X" to load specific release, otherwise loads latest
            |               |                  |                                        |      |            |          |          |          |                   |            | from string import Template                                                                     +|
            |               |                  |                                        |      |            |          |          |          |                   |            | import json                                                                                     +|
            |               |                  |                                        |      |            |          |          |          |                   |            | import time                                                                                     +|
            |               |                  |                                        |      |            |          |          |          |                   |            | import datetime                                                                                 +|
            |               |                  |                                        |      |            |          |          |          |                   |            | from urllib.request import urlopen, urlretrieve                                                 +|
            |               |                  |                                        |      |            |          |          |          |                   |            | from snoopUtils import determine_bucket_job, fetch_swagger                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            | K8S_REPO_URL = "https://raw.githubusercontent.com/kubernetes/kubernetes/"                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            | OPEN_API_PATH = "/api/openapi-spec/swagger.json"                                                +|
            |               |                  |                                        |      |            |          |          |          |                   |            |                                                                                                 +|
            |               |                  |                                        |      |            |          |          |          |                   |            | release_dates = {                                                                               +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.0.0": "2015-07-10",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.1.0": "2015-11-09",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.2.0": "2016-03-16",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.3.0": "2016-07-01",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.4.0": "2016-09-26",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.5.0": "2016-12-12",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.6.0": "2017-03-28",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.7.0": "2017-06-30",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.8.0": "2017-08-28",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.9.0": "2017-12-15",                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.10.0": "2018-03-26",                                                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.11.0":  "2018-06-27",                                                                     +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.12.0": "2018-09-27",                                                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.13.0": "2018-12-03" ,                                                                     +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.14.0": "2019-03-25",                                                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.15.0": "2019-06-19",                                                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.16.0": "2019-09-18",                                                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.17.0": "2019-12-07",                                                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   "v1.18.0": "2020-03-25"                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            | }                                                                                               +|
            |               |                  |                                        |      |            |          |          |          |                   |            | if custom_release is not None:                                                                  +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   release = custom_release                                                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   open_api_url = K8S_REPO_URL + release + OPEN_API_PATH                                         +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   open_api = json.loads(urlopen(open_api_url).read().decode('utf-8')) # may change this to ascii+|
            |               |                  |                                        |      |            |          |          |          |                   |            |   rd = release_dates[release]                                                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   release_date = time.mktime(datetime.datetime.strptime(rd, "%Y-%m-%d").timetuple())            +|
            |               |                  |                                        |      |            |          |          |          |                   |            | else:                                                                                           +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   bucket, job = determine_bucket_job()                                                          +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   swagger, metadata, commit_hash = fetch_swagger(bucket, job)                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   open_api = swagger                                                                            +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   open_api_url = K8S_REPO_URL + commit_hash + OPEN_API_PATH                                     +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   release_date = int(metadata['timestamp'])                                                     +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   release = metadata["version"].split('-')[0].replace('v','')                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |                                                                                                 +|
            |               |                  |                                        |      |            |          |          |          |                   |            | sql = Template("""                                                                              +|
            |               |                  |                                        |      |            |          |          |          |                   |            |    WITH open AS (                                                                               +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      SELECT '${open_api}'::jsonb as api_data)                                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |        INSERT INTO open_api(                                                                    +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          release,                                                                               +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          release_date,                                                                          +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          endpoint,                                                                              +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          level,                                                                                 +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          category,                                                                              +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          path,                                                                                  +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          k8s_group,                                                                             +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          k8s_version,                                                                           +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          k8s_kind,                                                                              +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          k8s_action,                                                                            +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          deprecated,                                                                            +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          description,                                                                           +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          spec                                                                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |        )                                                                                        +|
            |               |                  |                                        |      |            |          |          |          |                   |            |    SELECT                                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      trim(leading 'v' from '${release}') as release,                                            +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      to_timestamp(${release_date}) as release_date,                                             +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      (d.value ->> 'operationId'::text) as endpoint,                                             +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      CASE                                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |        WHEN paths.key ~~ '%alpha%' THEN 'alpha'                                                 +|
            |               |                  |                                        |      |            |          |          |          |                   |            |        WHEN paths.key ~~ '%beta%' THEN 'beta'                                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |        ELSE 'stable'                                                                            +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      END AS level,                                                                              +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      split_part((cat_tag.value ->> 0), '_'::text, 1) AS category,                               +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      paths.key AS path,                                                                         +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      ((d.value -> 'x-kubernetes-group-version-kind'::text) ->> 'group'::text) AS k8s_group,     +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      ((d.value -> 'x-kubernetes-group-version-kind'::text) ->> 'version'::text) AS k8s_version, +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      ((d.value -> 'x-kubernetes-group-version-kind'::text) ->> 'kind'::text) AS k8s_kind,       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      (d.value ->> 'x-kubernetes-action'::text) AS k8s_action,                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      CASE                                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |        WHEN (lower((d.value ->> 'description'::text)) ~~ '%deprecated%'::text) THEN true        +|
            |               |                  |                                        |      |            |          |          |          |                   |            |        ELSE false                                                                               +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      END AS deprecated,                                                                         +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      (d.value ->> 'description'::text) AS description,                                          +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      '${open_api_url}' as spec                                                                  +|
            |               |                  |                                        |      |            |          |          |          |                   |            |      FROM                                                                                       +|
            |               |                  |                                        |      |            |          |          |          |                   |            |          open                                                                                   +|
            |               |                  |                                        |      |            |          |          |          |                   |            |           , jsonb_each((open.api_data -> 'paths'::text)) paths(key, value)                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |           , jsonb_each(paths.value) d(key, value)                                               +|
            |               |                  |                                        |      |            |          |          |          |                   |            |           , jsonb_array_elements((d.value -> 'tags'::text)) cat_tag(value)                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |     ORDER BY paths.key;                                                                         +|
            |               |                  |                                        |      |            |          |          |          |                   |            |               """).substitute(release = release,                                                +|
            |               |                  |                                        |      |            |          |          |          |                   |            |                               release_date = release_date,                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            |                               open_api = json.dumps(open_api).replace("'","''"),                +|
            |               |                  |                                        |      |            |          |          |          |                   |            |                               open_api_url = open_api_url)                                      +|
            |               |                  |                                        |      |            |          |          |          |                   |            | try:                                                                                            +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   plpy.execute((sql))                                                                           +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   return "{} open api is loaded".format(custom_release if custom_release else "current")        +|
            |               |                  |                                        |      |            |          |          |          |                   |            | except:                                                                                         +|
            |               |                  |                                        |      |            |          |          |          |                   |            |   return "an error occurred"                                                                    +|
            |               |                  |                                        |      |            |          |          |          |                   |            |                                                                                                  |
    (1 row)

    #+end_SRC

*** load_audit_events
    #+begin_src sql-mode
\df+ load_audit_events
    #+end_src

    #+RESULTS:
    #+begin_SRC example
                                                                                                                                                                                                                                                   List of functions
     Schema |       Name        | Result data type |                            Argument data types                            | Type | Volatility | Parallel |  Owner   | Security | Access privileges |  Language  |                                          Source code                                          |                                                                                         Description
    --------+-------------------+------------------+---------------------------------------------------------------------------+------+------------+----------+----------+----------+-------------------+------------+-----------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     public | load_audit_events | text             | custom_bucket text DEFAULT NULL::text, custom_job text DEFAULT NULL::text | func | volatile   | unsafe   | postgres | invoker  |                   | plpython3u |                                                                                              +| loads all audit events from given bucket, job.  if neither given, loads latest successful job from sig-release blocking. if just bucket given, loads latest successful job for that bucket.0
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   from string import Template                                                                +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   from snoopUtils import determine_bucket_job, download_and_process_auditlogs, fetch_swagger +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                                                                                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   bucket, job = determine_bucket_job(custom_bucket, custom_job)                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   auditlog_file = download_and_process_auditlogs(bucket, job)                                +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   _, metadata, _ = fetch_swagger(bucket, job)                                                +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   release_date = int(metadata['timestamp'])                                                  +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   release = metadata["version"].split('-')[0].replace('v','')                                +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   num = release.replace('.','')                                                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                                                                                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   sql = Template("""                                                                         +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |     CREATE TEMPORARY TABLE audit_event_import${job}(data jsonb not null) ;                   +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |     COPY audit_event_import${job}(data)                                                      +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |     FROM '${audit_logfile}' (DELIMITER e'\x02', FORMAT 'csv', QUOTE e'\x01');                +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                                                                                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |     INSERT INTO audit_event(release, release_date,                                           +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                             audit_id, endpoint,                                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                             useragent, test,                                                 +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                             test_hit, conf_test_hit,                                         +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                             data, source)                                                    +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                                                                                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |     SELECT trim(leading 'v' from '${release}') as release,                                   +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             '${release_date}',                                                               +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             (raw.data ->> 'auditID'),                                                        +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             (raw.data ->> 'operationId') as endpoint,                                        +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             (raw.data ->> 'userAgent') as useragent,                                         +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             CASE                                                                             +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |               WHEN ((raw.data ->> 'userAgent') like 'e2e.test%')                             +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                 THEN trim(split_part((raw.data->>'userAgent'), '--'::text, 2))               +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |               ELSE null                                                                      +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             END as test,                                                                     +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             ((raw.data ->> 'userAgent') like 'e2e.test%') as test_hit,                       +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             ((raw.data ->> 'userAgent') like '%[Conformance]%') as conf_test_hit,            +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             raw.data,                                                                        +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             'https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/${bucket}/${job}' as source+|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |       FROM audit_event_import${job} raw;                                                     +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             """).substitute(                                                                 +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                 audit_logfile = auditlog_file,                                               +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                 release = release,                                                           +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                 bucket = bucket,                                                             +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                 job = job,                                                                   +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                 release_date = release_date                                                  +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |             )                                                                                +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   try:                                                                                       +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |       plpy.execute(sql)                                                                      +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |       return "it worked"                                                                     +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   except plpy.SPIError as plpyError:                                                         +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |       print("something went wrong with plpy: ")                                              +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |       return plpyError                                                                       +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |   except:                                                                                    +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |       return "something unknown went wrong"                                                  +|
            |                   |                  |                                                                           |      |            |          |          |          |                   |            |                                                                                               |
    (1 row)

    #+end_SRC

*** load_tests
    #+begin_src sql-mode
\df+ load_tests
    #+end_src

    #+RESULTS:
    #+begin_SRC example
                                                                                                                                                          List of functions
     Schema |    Name    | Result data type | Argument data types | Type | Volatility | Parallel |  Owner   | Security | Access privileges |  Language  |                                                       Source code                                                       |                  Description
    --------+------------+------------------+---------------------+------+------------+----------+----------+----------+-------------------+------------+-------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------
     public | load_tests | text             |                     | func | volatile   | unsafe   | postgres | invoker  |                   | plpython3u |                                                                                                                        +| loads latest conformance.yaml into test table
            |            |                  |                     |      |            |          |          |          |                   |            | from string import Template                                                                                            +|
            |            |                  |                     |      |            |          |          |          |                   |            | import json                                                                                                            +|
            |            |                  |                     |      |            |          |          |          |                   |            | import yaml                                                                                                            +|
            |            |                  |                     |      |            |          |          |          |                   |            | from urllib.request import urlopen, urlretrieve                                                                        +|
            |            |                  |                     |      |            |          |          |          |                   |            |                                                                                                                        +|
            |            |                  |                     |      |            |          |          |          |                   |            | TESTS_URL = "https://raw.githubusercontent.com/kubernetes/kubernetes/master/test/conformance/testdata/conformance.yaml"+|
            |            |                  |                     |      |            |          |          |          |                   |            | tests = json.dumps(yaml.safe_load(urlopen(TESTS_URL)))                                                                 +|
            |            |                  |                     |      |            |          |          |          |                   |            | sql = Template("""                                                                                                     +|
            |            |                  |                     |      |            |          |          |          |                   |            |               WITH jsonb_array AS (                                                                                    +|
            |            |                  |                     |      |            |          |          |          |                   |            |               SELECT jsonb_array_elements('${tests}'::jsonb) as test_data)                                             +|
            |            |                  |                     |      |            |          |          |          |                   |            |               INSERT INTO test(testname, codename, release, description, file)                                         +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  SELECT                                                                                                +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  (test_data->>'testname') as testname,                                                                 +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  (test_data->>'codename') as codename,                                                                 +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  CASE                                                                                                  +|
            |            |                  |                     |      |            |          |          |          |                   |            |                    WHEN ((test_data->>'release') = '') THEN '1.9.0'                                                    +|
            |            |                  |                     |      |            |          |          |          |                   |            |                    WHEN ((test_data->>'release') like '%,%')                                                           +|
            |            |                  |                     |      |            |          |          |          |                   |            |                      THEN trim(leading 'v' from split_part((test_data->>'release'), ', ', 2))||'.0'                    +|
            |            |                  |                     |      |            |          |          |          |                   |            |                    ELSE trim(leading 'v' from (test_data->>'release')) ||'.0'                                          +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  END as release,                                                                                       +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  (test_data->>'description') as description,                                                           +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  (test_data->>'file') as file                                                                          +|
            |            |                  |                     |      |            |          |          |          |                   |            |                  from jsonb_array;                                                                                     +|
            |            |                  |                     |      |            |          |          |          |                   |            |               """).substitute(tests = tests.replace("'","''"))                                                         +|
            |            |                  |                     |      |            |          |          |          |                   |            | try:                                                                                                                   +|
            |            |                  |                     |      |            |          |          |          |                   |            |     plpy.execute(sql)                                                                                                  +|
            |            |                  |                     |      |            |          |          |          |                   |            |     return 'conformance.yaml loaded into test!'                                                                        +|
            |            |                  |                     |      |            |          |          |          |                   |            | except Exception as e:                                                                                                 +|
            |            |                  |                     |      |            |          |          |          |                   |            |     return 'error occured: ', e                                                                                        +|
            |            |                  |                     |      |            |          |          |          |                   |            |                                                                                                                         |
    (1 row)

    #+end_SRC

** Create Helper Scripts
*** load all the open_api
    Created this in tables_views_functions, but if it worked then i should be able to see all releases and their release_date and orde by semver
    #+begin_src sql-mode
      select release, release_date
        from open_api
       group by release, release_date
       order by release::semver;

    #+end_src

    #+RESULTS:
    #+begin_SRC example
     release |    release_date
    ---------+---------------------
     1.8.0   | 2017-08-28 00:00:00
     1.9.0   | 2017-12-15 00:00:00
     1.10.0  | 2018-03-26 00:00:00
     1.11.0  | 2018-06-27 00:00:00
     1.12.0  | 2018-09-27 00:00:00
     1.13.0  | 2018-12-03 00:00:00
     1.14.0  | 2019-03-25 00:00:00
     1.19.0  | 2020-07-09 04:33:56
    (8 rows)

    #+end_SRC

    just gorgeous
*** load test info
   If this worked, I should be able to see test, codenames, files.  I could do a limit of 20 to check
   #+begin_src sql-mode
     select testname, codename, file
       from test
      limit 20;
   #+end_src

   #+RESULTS:
   #+begin_SRC example
                                           testname                                         |                                                                                                               codename                                                                                                               |                 file
   -----------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------
    Pod Lifecycle, post start exec hook                                                     | [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]                                                                                  | test/e2e/common/lifecycle_hook.go
    Pod Lifecycle, post start http hook                                                     | [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]                                                                                  | test/e2e/common/lifecycle_hook.go
    Pod Lifecycle, prestop exec hook                                                        | [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]                                                                                    | test/e2e/common/lifecycle_hook.go
    Pod Lifecycle, prestop http hook                                                        | [k8s.io] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]                                                                                    | test/e2e/common/lifecycle_hook.go
    Container Runtime, TerminationMessage, from log output of succeeding container          | [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]  | test/e2e/common/runtime.go
    Container Runtime, TerminationMessage, from file of succeeding container                | [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] | test/e2e/common/runtime.go
    Container Runtime, TerminationMessage, from container's log output of failing container | [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]              | test/e2e/common/runtime.go
    Container Runtime, TerminationMessagePath, non-root user and non-default path           | [k8s.io] Container Runtime blackbox test on terminated container should report termination message [LinuxOnly] if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]           | test/e2e/common/runtime.go
    Container Runtime, Restart Policy, Pod Phases                                           | [k8s.io] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]                                                                                    | test/e2e/common/runtime.go
    Docker containers, with arguments                                                       | [k8s.io] Docker Containers should be able to override the image's default arguments (docker cmd) [NodeConformance] [Conformance]                                                                                                     | test/e2e/common/docker_containers.go
    Docker containers, with command                                                         | [k8s.io] Docker Containers should be able to override the image's default command (docker entrypoint) [NodeConformance] [Conformance]                                                                                                | test/e2e/common/docker_containers.go
    Docker containers, with command and arguments                                           | [k8s.io] Docker Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]                                                                                                      | test/e2e/common/docker_containers.go
    Docker containers, without command and arguments                                        | [k8s.io] Docker Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]                                                                                                               | test/e2e/common/docker_containers.go
    init-container-starts-app-restartalways-pod                                             | [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]                                                                                                                          | test/e2e/common/init_container.go
    init-container-starts-app-restartnever-pod                                              | [k8s.io] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]                                                                                                                           | test/e2e/common/init_container.go
    init-container-fails-stops-app-restartnever-pod                                         | [k8s.io] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]                                                                                | test/e2e/common/init_container.go
    init-container-fails-stops-app-restartalways-pod                                        | [k8s.io] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]                                                                                                | test/e2e/common/init_container.go
    Kubelet, hostAliases                                                                    | [k8s.io] Kubelet when scheduling a busybox Pod with hostAliases should write entries to /etc/hosts [LinuxOnly] [NodeConformance] [Conformance]                                                                                       | test/e2e/common/kubelet.go
    Kubelet, log output, default                                                            | [k8s.io] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]                                                                                                          | test/e2e/common/kubelet.go
    Kubelet, failed pod, delete                                                             | [k8s.io] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]                                                                                           | test/e2e/common/kubelet.go
   (20 rows)

   #+end_SRC

   sweet as!

*** load latest audit_events
    We want to load for gci-gce and for conformance-latest
    if it worked we should see both sources in our audit_event table
    #+begin_src sql-mode
select count(*) as "total events", source from audit_event group by source;
    #+end_src

    #+RESULTS:
    #+begin_SRC example
     total events |                                                    source
    --------------+---------------------------------------------------------------------------------------------------------------
           259656 | https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/ci-kubernetes-e2e-gci-gce/1281075852754292736
           283525 | https://prow.k8s.io/view/gcs/kubernetes-jenkins/logs/ci-kubernetes-gce-conformance-latest/1281066793925873665
    (2 rows)

    #+end_SRC

    wonderful!

** Create our views
   Same process as our tables and functions, tracked in tables-views-functions.org

** Load our data
** Materialize the stable view
